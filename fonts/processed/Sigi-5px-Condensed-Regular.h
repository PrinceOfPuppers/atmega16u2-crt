#define CHAR_HEIGHT15

typedef struct CharacterData{
    uint8_t width;
    uint16_t offset;
    uint16_t length;
} CharacterData;

const CharacterData characterDataArray[] PROGMEM = {
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 0, 0, 0 },
    { 9, 0, 0 }, //  
    { 3, 0, 8 }, // !
    { 9, 8, 8 }, // "
    { 15, 16, 32 }, // #
    { 15, 48, 26 }, // $
    { 15, 74, 26 }, // %
    { 12, 100, 16 }, // &
    { 3, 116, 4 }, // '
    { 6, 120, 10 }, // (
    { 6, 130, 10 }, // )
    { 6, 140, 8 }, // *
    { 9, 148, 10 }, // +
    { 6, 158, 4 }, // ,
    { 9, 162, 6 }, // -
    { 3, 168, 2 }, // .
    { 9, 170, 10 }, // /
    { 9, 180, 16 }, // 0
    { 9, 196, 16 }, // 1
    { 12, 212, 20 }, // 2
    { 12, 232, 22 }, // 3
    { 12, 254, 18 }, // 4
    { 9, 272, 20 }, // 5
    { 12, 292, 20 }, // 6
    { 9, 312, 14 }, // 7
    { 12, 326, 20 }, // 8
    { 12, 346, 20 }, // 9
    { 3, 366, 4 }, // :
    { 6, 370, 6 }, // ;
    { 9, 376, 10 }, // <
    { 9, 386, 12 }, // =
    { 9, 398, 10 }, // >
    { 9, 408, 10 }, // ?
    { 15, 418, 28 }, // @
    { 12, 446, 24 }, // A
    { 12, 470, 26 }, // B
    { 12, 496, 18 }, // C
    { 12, 514, 24 }, // D
    { 9, 538, 20 }, // E
    { 9, 558, 16 }, // F
    { 12, 574, 24 }, // G
    { 12, 598, 24 }, // H
    { 9, 622, 18 }, // I
    { 12, 640, 14 }, // J
    { 12, 654, 20 }, // K
    { 9, 674, 14 }, // L
    { 15, 688, 26 }, // M
    { 12, 714, 24 }, // N
    { 12, 738, 20 }, // O
    { 12, 758, 20 }, // P
    { 12, 778, 22 }, // Q
    { 12, 800, 24 }, // R
    { 12, 824, 16 }, // S
    { 9, 840, 14 }, // T
    { 12, 854, 20 }, // U
    { 15, 874, 18 }, // V
    { 15, 892, 24 }, // W
    { 9, 916, 18 }, // X
    { 9, 934, 14 }, // Y
    { 12, 948, 22 }, // Z
    { 6, 970, 14 }, // [
    { 9, 984, 10 }, // backslash
    { 6, 994, 14 }, // ]
    { 9, 1008, 6 }, // ^
    { 12, 1014, 8 }, // _
    { 6, 1022, 4 }, // `
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 0, 1026, 0 },
    { 9, 1026, 14 }, // {
    { 3, 1040, 10 }, // |
    { 9, 1050, 14 }, // }
    { 18, 1064, 12 }, // ~
    { 0, 1076, 0 }
};

const uint8_t characterArray[] PROGMEM = {
    0, 0, 0, 3, 0, 6, 0, 12, // ! 
    0, 0, 0, 3, 6, 0, 6, 3, // " 
    0, 3, 0, 9, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 6, 3, 6, 9, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, 12, 3, 12, 9, // # 
    0, 3, 3, 0, 3, 6, 3, 12, 6, 0, 6, 3, 6, 6, 6, 9, 6, 12, 9, 0, 9, 6, 9, 12, 12, 9, // $ 
    0, 0, 0, 3, 0, 12, 3, 0, 3, 3, 3, 9, 6, 6, 9, 3, 9, 9, 9, 12, 12, 0, 12, 9, 12, 12, // % 
    0, 3, 0, 9, 3, 0, 3, 6, 3, 12, 6, 3, 6, 9, 9, 12, // & 
    0, 0, 0, 3, // ' 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, // ( 
    0, 0, 0, 12, 3, 3, 3, 6, 3, 9, // ) 
    0, 0, 0, 3, 3, 0, 3, 3, // * 
    0, 6, 3, 3, 3, 6, 3, 9, 6, 6, // + 
    0, 12, 3, 9, // , 
    0, 6, 3, 6, 6, 6, // - 
    0, 12, // . 
    0, 9, 0, 12, 3, 6, 6, 0, 6, 3, // / 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 3, 6, 6, 6, 9, // 0 
    0, 3, 0, 12, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 6, 12, // 1 
    0, 3, 0, 12, 3, 0, 3, 9, 3, 12, 6, 0, 6, 6, 6, 12, 9, 3, 9, 12, // 2 
    0, 0, 0, 12, 3, 0, 3, 6, 3, 12, 6, 0, 6, 3, 6, 6, 6, 12, 9, 0, 9, 9, // 3 
    0, 6, 3, 3, 3, 6, 6, 0, 6, 3, 6, 6, 6, 9, 6, 12, 9, 6, // 4 
    0, 0, 0, 3, 0, 6, 0, 12, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 9, // 5 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 12, 9, 9, // 6 
    0, 0, 3, 0, 3, 9, 3, 12, 6, 0, 6, 3, 6, 6, // 7 
    0, 3, 0, 9, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 12, 9, 3, 9, 9, // 8 
    0, 3, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 12, 9, 3, 9, 6, 9, 9, // 9 
    0, 3, 0, 9, // : 
    0, 12, 3, 3, 3, 9, // ; 
    0, 6, 3, 3, 3, 9, 6, 0, 6, 12, // < 
    0, 3, 0, 9, 3, 3, 3, 9, 6, 3, 6, 9, // = 
    0, 0, 0, 12, 3, 3, 3, 9, 6, 6, // > 
    0, 0, 3, 0, 3, 6, 3, 12, 6, 3, // ? 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 0, 6, 3, 6, 6, 6, 12, 9, 0, 9, 6, 9, 12, 12, 3, 12, 6, // @ 
    0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 6, 0, 6, 6, 9, 3, 9, 6, 9, 9, 9, 12, // A 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 12, 9, 3, 9, 9, // B 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 0, 6, 12, 9, 3, 9, 9, // C 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 12, 6, 0, 6, 12, 9, 3, 9, 6, 9, 9, // D 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 3, 12, 6, 0, 6, 12, // E 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 6, 0, // F 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 0, 6, 6, 6, 12, 9, 0, 9, 6, 9, 9, 9, 12, // G 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 6, 6, 6, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, // H 
    0, 0, 0, 12, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 6, 0, 6, 12, // I 
    0, 9, 3, 12, 6, 12, 9, 0, 9, 3, 9, 6, 9, 9, // J 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 6, 6, 3, 6, 9, 9, 0, 9, 12, // K 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 12, // L 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 3, 6, 6, 9, 3, 12, 0, 12, 3, 12, 6, 12, 9, 12, 12, // M 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 3, 6, 6, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, // N 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 0, 6, 12, 9, 3, 9, 6, 9, 9, // O 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 6, 0, 6, 6, 9, 3, // P 
    0, 3, 0, 6, 0, 9, 3, 0, 3, 12, 6, 0, 6, 9, 6, 12, 9, 3, 9, 6, 9, 12, // Q 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 6, 6, 0, 6, 6, 6, 9, 9, 3, 9, 12, // R 
    0, 3, 3, 0, 3, 6, 3, 12, 6, 0, 6, 6, 6, 12, 9, 9, // S 
    0, 0, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 6, 0, // T 
    0, 0, 0, 3, 0, 6, 0, 9, 3, 12, 6, 12, 9, 0, 9, 3, 9, 6, 9, 9, // U 
    0, 0, 0, 3, 3, 6, 3, 9, 6, 12, 9, 6, 9, 9, 12, 0, 12, 3, // V 
    0, 0, 0, 3, 0, 6, 0, 9, 3, 12, 6, 6, 6, 9, 9, 12, 12, 0, 12, 3, 12, 6, 12, 9, // W 
    0, 0, 0, 3, 0, 9, 0, 12, 3, 6, 6, 0, 6, 3, 6, 9, 6, 12, // X 
    0, 0, 0, 3, 3, 6, 3, 9, 3, 12, 6, 0, 6, 3, // Y 
    0, 0, 0, 9, 0, 12, 3, 0, 3, 6, 3, 12, 6, 0, 6, 3, 6, 12, 9, 0, 9, 12, // Z 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 0, 3, 12, // [ 
    0, 0, 0, 3, 3, 6, 6, 9, 6, 12, // backslash 
    0, 0, 0, 12, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, // ] 
    0, 3, 3, 0, 6, 3, // ^ 
    0, 12, 3, 12, 6, 12, 9, 12, // _ 
    0, 0, 3, 3, // ` 
    0, 6, 3, 0, 3, 3, 3, 9, 3, 12, 6, 0, 6, 12, // { 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, // | 
    0, 0, 0, 12, 3, 0, 3, 3, 3, 9, 3, 12, 6, 6, // } 
    0, 6, 3, 3, 6, 3, 9, 6, 12, 6, 15, 3, // ~ 
};
#define CHAR_HEIGHT 21
#define MAX_CHAR_WIDTH 21
#define MAX_SEGMENTS 3

typedef struct CharacterData{
    uint8_t first_x;                  // first x value in offset list (allows for less beam oversaturation on prev char)
    uint8_t first_y;                  // first y ''
    uint8_t width;                  // full width of the character
    uint8_t length;                 // number of bytes for full char
    uint8_t segments;               // number of segments
    uint16_t offsets[MAX_SEGMENTS]; // offsets into characterArray for the start of each segment
    uint16_t lengths[MAX_SEGMENTS]; // number of bytes for segment
} CharacterData;

const CharacterData characterDataArray[] PROGMEM = {
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {0, 0, 0}, {0, 0, 0} },
    { 0, 0, 9, 0, 0, {0, 0, 0}, {0, 0, 0} }, //  
    { 0, 18, 3, 12, 2, {0, 2, 12}, {2, 10, 0} }, // !
    { 0, 0, 9, 12, 2, {12, 18, 24}, {6, 6, 0} }, // "
    { 0, 6, 15, 70, 1, {24, 94, 94}, {70, 0, 0} }, // #
    { 0, 15, 15, 54, 1, {94, 148, 148}, {54, 0, 0} }, // $
    { 3, 18, 21, 44, 2, {148, 182, 192}, {34, 10, 0} }, // %
    { 12, 6, 15, 50, 1, {192, 242, 242}, {50, 0, 0} }, // &
    { 0, 0, 3, 4, 1, {242, 246, 246}, {4, 0, 0} }, // '
    { 3, 0, 6, 14, 1, {246, 260, 260}, {14, 0, 0} }, // (
    { 0, 0, 6, 14, 1, {260, 274, 274}, {14, 0, 0} }, // )
    { 0, 0, 9, 14, 1, {274, 288, 288}, {14, 0, 0} }, // *
    { 0, 9, 15, 26, 1, {288, 314, 314}, {26, 0, 0} }, // +
    { 0, 18, 6, 4, 1, {314, 318, 318}, {4, 0, 0} }, // ,
    { 0, 9, 9, 6, 1, {318, 324, 324}, {6, 0, 0} }, // -
    { 0, 18, 3, 2, 1, {324, 326, 326}, {2, 0, 0} }, // .
    { 0, 18, 9, 14, 1, {326, 340, 340}, {14, 0, 0} }, // /
    { 0, 3, 15, 34, 1, {340, 374, 374}, {34, 0, 0} }, // 0
    { 0, 3, 6, 18, 1, {374, 392, 392}, {18, 0, 0} }, // 1
    { 0, 3, 15, 36, 1, {392, 428, 428}, {36, 0, 0} }, // 2
    { 0, 3, 15, 30, 1, {428, 458, 458}, {30, 0, 0} }, // 3
    { 9, 0, 15, 48, 1, {458, 506, 506}, {48, 0, 0} }, // 4
    { 0, 15, 15, 34, 1, {506, 540, 540}, {34, 0, 0} }, // 5
    { 12, 3, 15, 36, 1, {540, 576, 576}, {36, 0, 0} }, // 6
    { 0, 0, 15, 22, 1, {576, 598, 598}, {22, 0, 0} }, // 7
    { 0, 3, 15, 50, 1, {598, 648, 648}, {50, 0, 0} }, // 8
    { 0, 15, 15, 36, 1, {648, 684, 684}, {36, 0, 0} }, // 9
    { 0, 6, 3, 4, 2, {684, 686, 688}, {2, 2, 0} }, // :
    { 3, 6, 6, 6, 2, {688, 690, 694}, {2, 4, 0} }, // ;
    { 9, 0, 12, 14, 1, {694, 708, 708}, {14, 0, 0} }, // <
    { 0, 6, 9, 12, 2, {708, 714, 720}, {6, 6, 0} }, // =
    { 0, 0, 12, 14, 1, {720, 734, 734}, {14, 0, 0} }, // >
    { 6, 18, 15, 18, 2, {734, 736, 752}, {2, 16, 0} }, // ?
    { 12, 18, 21, 40, 1, {752, 792, 792}, {40, 0, 0} }, // @
    { 0, 18, 15, 46, 1, {792, 838, 838}, {46, 0, 0} }, // A
    { 0, 0, 15, 50, 1, {838, 888, 888}, {50, 0, 0} }, // B
    { 12, 3, 15, 26, 1, {888, 914, 914}, {26, 0, 0} }, // C
    { 0, 0, 15, 38, 1, {914, 952, 952}, {38, 0, 0} }, // D
    { 9, 9, 15, 50, 1, {952, 1002, 1002}, {50, 0, 0} }, // E
    { 0, 18, 15, 42, 1, {1002, 1044, 1044}, {42, 0, 0} }, // F
    { 9, 9, 15, 32, 1, {1044, 1076, 1076}, {32, 0, 0} }, // G
    { 0, 0, 15, 46, 1, {1076, 1122, 1122}, {46, 0, 0} }, // H
    { 0, 0, 3, 14, 1, {1122, 1136, 1136}, {14, 0, 0} }, // I
    { 0, 15, 15, 20, 1, {1136, 1156, 1156}, {20, 0, 0} }, // J
    { 0, 0, 15, 40, 1, {1156, 1196, 1196}, {40, 0, 0} }, // K
    { 0, 0, 12, 20, 1, {1196, 1216, 1216}, {20, 0, 0} }, // L
    { 0, 0, 15, 46, 1, {1216, 1262, 1262}, {46, 0, 0} }, // M
    { 0, 0, 15, 50, 1, {1262, 1312, 1312}, {50, 0, 0} }, // N
    { 0, 3, 15, 34, 1, {1312, 1346, 1346}, {34, 0, 0} }, // O
    { 0, 18, 15, 32, 1, {1346, 1378, 1378}, {32, 0, 0} }, // P
    { 0, 3, 15, 56, 1, {1378, 1434, 1434}, {56, 0, 0} }, // Q
    { 0, 18, 15, 42, 1, {1434, 1476, 1476}, {42, 0, 0} }, // R
    { 0, 15, 15, 30, 1, {1476, 1506, 1506}, {30, 0, 0} }, // S
    { 0, 0, 15, 34, 1, {1506, 1540, 1540}, {34, 0, 0} }, // T
    { 0, 0, 15, 30, 1, {1540, 1570, 1570}, {30, 0, 0} }, // U
    { 0, 0, 15, 26, 1, {1570, 1596, 1596}, {26, 0, 0} }, // V
    { 0, 0, 21, 54, 1, {1596, 1650, 1650}, {54, 0, 0} }, // W
    { 0, 0, 15, 38, 1, {1650, 1688, 1688}, {38, 0, 0} }, // X
    { 0, 0, 15, 26, 1, {1688, 1714, 1714}, {26, 0, 0} }, // Y
    { 0, 0, 15, 38, 1, {1714, 1752, 1752}, {38, 0, 0} }, // Z
    { 3, 0, 6, 18, 1, {1752, 1770, 1770}, {18, 0, 0} }, // [
    { 0, 0, 9, 14, 1, {1770, 1784, 1784}, {14, 0, 0} }, // backslash
    { 0, 0, 6, 18, 1, {1784, 1802, 1802}, {18, 0, 0} }, // ]
    { 0, 6, 15, 10, 1, {1802, 1812, 1812}, {10, 0, 0} }, // ^
    { 0, 18, 12, 8, 1, {1812, 1820, 1820}, {8, 0, 0} }, // _
    { 0, 0, 6, 4, 1, {1820, 1824, 1824}, {4, 0, 0} }, // `
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 0, 0, 0, 0, 0, {1824, 1824, 1824}, {0, 0, 0} },
    { 6, 0, 9, 14, 1, {1824, 1838, 1838}, {14, 0, 0} }, // {
    { 0, 0, 3, 14, 1, {1838, 1852, 1852}, {14, 0, 0} }, // |
    { 0, 0, 9, 14, 1, {1852, 1866, 1866}, {14, 0, 0} }, // }
    { 0, 6, 18, 12, 1, {1866, 1878, 1878}, {12, 0, 0} }, // ~
    { 0, 0, 0, 0, 0, {1878, 1878, 1878}, {0, 0, 0} }
};

const uint8_t characterArray[] PROGMEM = {
    0, 18, 0, 0, 0, 3, 0, 6, 0, 9, 0, 12, // ! 
    0, 0, 0, 3, 0, 6, 6, 0, 6, 3, 6, 6, // " 
    0, 6, 3, 6, 3, 3, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 0, 12, 3, 12, 3, 15, 3, 18, 3, 15, 3, 12, 6, 12, 9, 12, 9, 9, 9, 6, 6, 6, 3, 6, 6, 6, 9, 6, 9, 3, 9, 0, 9, 3, 9, 6, 12, 6, 9, 6, 9, 9, 9, 12, 9, 15, 9, 18, 9, 15, 9, 12, 12, 12, // # 
    0, 15, 3, 15, 6, 15, 6, 12, 6, 9, 3, 9, 0, 6, 3, 3, 6, 3, 6, 0, 6, 3, 6, 6, 6, 9, 9, 9, 12, 12, 9, 15, 6, 15, 6, 18, 6, 15, 9, 15, 12, 12, 9, 9, 6, 9, 6, 6, 6, 3, 9, 3, 12, 3, // $ 
    3, 18, 6, 15, 6, 12, 9, 9, 9, 6, 6, 3, 3, 0, 0, 3, 3, 6, 6, 3, 3, 6, 0, 3, 3, 0, 6, 3, 9, 6, 12, 3, 12, 0, 12, 15, 15, 12, 18, 15, 15, 18, 12, 15, // % 
    12, 6, 12, 3, 9, 0, 6, 0, 3, 3, 3, 6, 3, 9, 6, 9, 6, 12, 9, 15, 9, 18, 6, 18, 3, 18, 0, 15, 0, 12, 3, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 18, 9, 18, 9, 15, 12, 12, // & 
    0, 0, 0, 3, // ' 
    3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, // ( 
    0, 0, 3, 3, 3, 6, 3, 9, 3, 12, 3, 15, 0, 18, // ) 
    0, 0, 3, 3, 0, 6, 3, 3, 6, 0, 3, 3, 6, 6, // * 
    0, 9, 3, 9, 6, 9, 6, 6, 6, 3, 6, 6, 6, 9, 6, 12, 6, 15, 6, 12, 6, 9, 9, 9, 12, 9, // + 
    0, 18, 3, 15, // , 
    0, 9, 3, 9, 6, 9, // - 
    0, 18, // . 
    0, 18, 0, 15, 3, 12, 3, 9, 6, 6, 6, 3, 6, 0, // / 
    0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 3, // 0 
    0, 3, 3, 3, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 3, 15, 3, 18, // 1 
    0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 9, 9, 6, 12, 3, 15, 3, 18, 0, 18, 3, 18, 6, 18, 9, 18, 12, 18, 9, 18, 6, 18, 3, 15, // 2 
    0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 9, 9, 6, 9, 9, 9, 12, 12, 12, 15, 9, 18, 6, 18, 3, 18, 0, 15, // 3 
    9, 0, 9, 3, 6, 3, 3, 6, 0, 9, 0, 12, 3, 12, 6, 12, 9, 12, 9, 9, 9, 6, 9, 3, 9, 6, 9, 9, 9, 12, 9, 15, 9, 18, 9, 15, 9, 12, 12, 12, 9, 12, 6, 12, 3, 12, 0, 9, // 4 
    0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 9, 6, 6, 6, 3, 6, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, // 5 
    12, 3, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 9, 9, 6, 9, 3, 9, 0, 9, // 6 
    0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 12, 3, 12, 6, 9, 9, 9, 12, 6, 15, 6, 18, // 7 
    0, 3, 0, 6, 3, 9, 6, 9, 9, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 9, 9, 12, 12, 12, 15, 9, 18, 6, 18, 3, 18, 0, 15, 0, 12, 3, 9, // 8 
    0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 9, 9, 6, 9, 3, 9, 0, 6, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 12, 9, // 9 
    0, 6, 0, 15, // : 
    3, 6, 0, 18, 3, 15, // ; 
    9, 0, 6, 3, 3, 6, 0, 9, 3, 12, 6, 15, 9, 18, // < 
    0, 6, 3, 6, 6, 6, 0, 12, 3, 12, 6, 12, // = 
    0, 0, 3, 3, 6, 6, 9, 9, 6, 12, 3, 15, 0, 18, // > 
    6, 18, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 9, 6, 6, 9, 6, 12, // ? 
    12, 18, 9, 18, 6, 18, 3, 15, 0, 12, 0, 9, 0, 6, 3, 3, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 15, 12, 12, 9, 9, 6, 6, 9, 9, 12, 12, 9, // @ 
    0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 12, 9, 9, 9, 6, 9, 3, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, 9, 12, 12, 12, 15, 12, 18, // A 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 9, 9, 6, 9, 3, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 0, // B 
    12, 3, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 15, // C 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 0, // D 
    9, 9, 6, 9, 3, 9, 0, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 9, 0, 6, 0, 3, 0, 0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 3, 18, 6, 18, 9, 18, 12, 18, // E 
    0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 9, 0, 6, 0, 3, 0, 0, 0, 0, 3, 0, 6, 0, 9, 3, 9, 6, 9, 9, 9, // F 
    9, 9, 12, 9, 12, 12, 12, 15, 9, 18, 6, 18, 3, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, // G 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 0, 15, 0, 12, 0, 9, 3, 9, 6, 9, 9, 9, 12, 9, 12, 6, 12, 3, 12, 0, 12, 3, 12, 6, 12, 9, 12, 12, 12, 15, 12, 18, // H 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, // I 
    0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 12, 0, // J 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 0, 15, 0, 12, 0, 9, 3, 9, 6, 6, 9, 3, 12, 0, 9, 3, 6, 6, 3, 9, 6, 12, 9, 15, 12, 18, // K 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 3, 18, 6, 18, 9, 18, // L 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 3, 3, 6, 6, 9, 3, 12, 3, 12, 0, 12, 3, 12, 6, 12, 9, 12, 12, 12, 15, 12, 18, // M 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 3, 6, 6, 9, 9, 12, 12, 12, 12, 9, 12, 6, 12, 3, 12, 0, 12, 3, 12, 6, 12, 9, 12, 12, 12, 15, 12, 18, // N 
    0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 3, // O 
    0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 9, 9, 6, 9, 3, 9, 0, 9, // P 
    0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 9, 15, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 9, 0, 6, 0, 3, 0, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 12, 9, 12, 12, 12, 15, 12, 18, 9, 18, // Q 
    0, 18, 0, 15, 0, 12, 0, 9, 0, 6, 0, 3, 0, 0, 3, 0, 6, 0, 9, 0, 12, 3, 12, 6, 9, 9, 6, 9, 3, 9, 0, 9, 3, 9, 6, 9, 6, 12, 9, 15, 12, 18, // R 
    0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 9, 9, 6, 9, 3, 9, 0, 6, 0, 3, 3, 0, 6, 0, 9, 0, 12, 3, // S 
    0, 0, 3, 0, 6, 0, 6, 3, 6, 6, 6, 9, 6, 12, 6, 15, 6, 18, 6, 15, 6, 12, 6, 9, 6, 6, 6, 3, 6, 0, 9, 0, 12, 0, // T 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 18, 12, 15, 12, 12, 12, 9, 12, 6, 12, 3, 12, 0, // U 
    0, 0, 0, 3, 0, 6, 3, 9, 3, 12, 6, 15, 6, 18, 6, 15, 9, 12, 9, 9, 12, 6, 12, 3, 12, 0, // V 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 3, 18, 6, 18, 9, 15, 9, 12, 9, 9, 9, 6, 9, 3, 9, 0, 9, 3, 9, 6, 9, 9, 9, 12, 9, 15, 12, 18, 15, 18, 18, 15, 18, 12, 18, 9, 18, 6, 18, 3, 18, 0, // W 
    0, 0, 0, 3, 3, 6, 6, 9, 3, 12, 0, 15, 0, 18, 0, 15, 3, 12, 6, 9, 9, 6, 12, 3, 12, 0, 12, 3, 9, 6, 6, 9, 9, 12, 12, 15, 12, 18, // X 
    0, 0, 0, 3, 3, 6, 6, 9, 6, 12, 6, 15, 6, 18, 6, 15, 6, 12, 6, 9, 9, 6, 12, 3, 12, 0, // Y 
    0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 12, 3, 9, 6, 6, 9, 3, 12, 0, 15, 0, 18, 3, 18, 6, 18, 9, 18, 12, 18, 9, 18, 6, 18, 3, 18, 0, 15, // Z 
    3, 0, 0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, 3, 18, // [ 
    0, 0, 0, 3, 0, 6, 3, 9, 3, 12, 6, 15, 6, 18, // backslash 
    0, 0, 3, 0, 3, 3, 3, 6, 3, 9, 3, 12, 3, 15, 3, 18, 0, 18, // ] 
    0, 6, 3, 3, 6, 0, 9, 3, 12, 6, // ^ 
    0, 18, 3, 18, 6, 18, 9, 18, // _ 
    0, 0, 3, 3, // ` 
    6, 0, 3, 3, 3, 6, 0, 9, 3, 12, 3, 15, 6, 18, // { 
    0, 0, 0, 3, 0, 6, 0, 9, 0, 12, 0, 15, 0, 18, // | 
    0, 0, 3, 3, 3, 6, 6, 9, 3, 12, 3, 15, 0, 18, // } 
    0, 6, 3, 3, 6, 3, 9, 6, 12, 6, 15, 3, // ~ 
};